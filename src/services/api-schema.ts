/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/test/singleResult": {
    /** 统一返回--单条数据返回 */
    post: operations["singleResult"];
  };
  "/test/resultBase": {
    /** 统一返回--无数据返回 */
    post: operations["resultBase"];
  };
  "/test/pageResult": {
    /** 统一返回--分页数据返回 */
    post: operations["pageResult"];
  };
  "/test/listResult": {
    /** 统一返回--多条数据返回 */
    post: operations["listResult"];
  };
  "/test/exception": {
    /** 异常 */
    post: operations["exception"];
  };
  "/test/exception3": {
    /** 异常3 */
    post: operations["exception3"];
  };
  "/test/exception2": {
    /** 异常2 */
    post: operations["exception2"];
  };
  "/test/createTest": {
    /** 创建test */
    post: operations["createTest"];
  };
  "/api/user/create": {
    post: operations["createUser"];
  };
  "/test/findTestById/{id}": {
    /** 根据id查询测试 */
    get: operations["findTestById"];
  };
  "/api/user/{id}": {
    get: operations["getUserById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description 创建时间 */
    LocalTime: {
      /** Format: int32 */
      hour?: number;
      /** Format: int32 */
      minute?: number;
      /** Format: int32 */
      second?: number;
      /** Format: int32 */
      nano?: number;
    };
    SingleResultTestDto: {
      /** @description 是否成功 */
      success?: boolean;
      /** @description 错误码 */
      code?: string;
      /** @description 返回消息 */
      message?: string;
      data?: components["schemas"]["TestDto"];
    };
    /** @description 测试信息 */
    TestDto: {
      /**
       * Format: int64
       * @description 主键ID
       */
      id?: number;
      /** @description 名称 */
      name?: string;
      /** @description 性别 */
      sex?: boolean;
      /**
       * Format: int32
       * @description 年龄
       */
      age?: number;
      /**
       * Format: date-time
       * @description 创建日期时间
       */
      createDateTime?: string;
      /**
       * Format: date
       * @description 创建日期
       */
      createDate?: string;
      createTime?: components["schemas"]["LocalTime"];
      /**
       * @description 状态
       * @enum {string}
       */
      statusEnum?: "ENABLE" | "DISABLE";
      /**
       * @description 状态2
       * @enum {string}
       */
      statusEnum2?: "ENABLE" | "DISABLE";
    };
    /** @description 测试参数信息 */
    TestParamDto: {
      /**
       * Format: int64
       * @description 主键ID
       */
      id?: number;
      /** @description 名称 */
      name?: string;
      /** @description 性别 */
      sex?: boolean;
      /**
       * Format: int32
       * @description 年龄
       */
      age?: number;
      /**
       * Format: date-time
       * @description 创建日期时间
       */
      createDateTime?: string;
      /**
       * Format: date
       * @description 创建日期
       */
      createDate?: string;
      createTime?: components["schemas"]["LocalTime"];
      /**
       * @description 状态
       * @enum {string}
       */
      statusEnum?: "ENABLE" | "DISABLE";
    };
    BaseResultVoid: {
      /** @description 是否成功 */
      success?: boolean;
      /** @description 错误码 */
      code?: string;
      /** @description 返回消息 */
      message?: string;
      /** @description 返回数据 */
      data?: Record<string, never>;
    };
    /** @description 测试信息 */
    TestPageParamDto: {
      /**
       * Format: int32
       * @description 页码
       * @example 1
       */
      page?: number;
      /**
       * Format: int32
       * @description 每页数量
       * @example 10
       */
      pageSize?: number;
      /** @description 名称 */
      name?: string;
    };
    /** @description 返回数据 */
    PageListTestDto: {
      /**
       * Format: int32
       * @description 页码
       */
      page?: number;
      /**
       * Format: int32
       * @description 总记录数
       */
      total?: number;
      /** @description 数据列表 */
      list?: components["schemas"]["TestDto"][];
    };
    PageResultTestDto: {
      /** @description 是否成功 */
      success?: boolean;
      /** @description 错误码 */
      code?: string;
      /** @description 返回消息 */
      message?: string;
      data?: components["schemas"]["PageListTestDto"];
    };
    ListResultTestDto: {
      /** @description 是否成功 */
      success?: boolean;
      /** @description 错误码 */
      code?: string;
      /** @description 返回消息 */
      message?: string;
      /** @description 返回数据 */
      data?: components["schemas"]["TestDto"][];
    };
    SingleResultLong: {
      /** @description 是否成功 */
      success?: boolean;
      /** @description 错误码 */
      code?: string;
      /** @description 返回消息 */
      message?: string;
      /**
       * Format: int64
       * @description 返回数据
       */
      data?: number;
    };
    UserDTO: {
      /** Format: int64 */
      id?: number;
      name?: string;
      mobileNo?: string;
      email?: string;
      /** Format: int32 */
      status?: number;
      /** Format: int64 */
      createBy?: number;
      /** Format: date-time */
      createTime?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** 统一返回--单条数据返回 */
  singleResult: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SingleResultTestDto"];
        };
      };
    };
  };
  /** 统一返回--无数据返回 */
  resultBase: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TestParamDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["BaseResultVoid"];
        };
      };
    };
  };
  /** 统一返回--分页数据返回 */
  pageResult: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TestPageParamDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["PageResultTestDto"];
        };
      };
    };
  };
  /** 统一返回--多条数据返回 */
  listResult: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["ListResultTestDto"];
        };
      };
    };
  };
  /** 异常 */
  exception: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SingleResultLong"];
        };
      };
    };
  };
  /** 异常3 */
  exception3: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["SingleResultTestDto"];
        };
      };
    };
  };
  /** 异常2 */
  exception2: {
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["BaseResultVoid"];
        };
      };
    };
  };
  /** 创建test */
  createTest: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TestParamDto"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": number;
        };
      };
    };
  };
  createUser: {
    parameters: {
      query: {
        userDTO: components["schemas"]["UserDTO"];
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDTO"];
        };
      };
    };
  };
  /** 根据id查询测试 */
  findTestById: {
    parameters: {
      path: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["TestDto"];
        };
      };
    };
  };
  getUserById: {
    parameters: {
      query: {
        id: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "*/*": components["schemas"]["UserDTO"];
        };
      };
    };
  };
}
